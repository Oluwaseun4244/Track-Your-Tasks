{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","Notify/Notify.jsx","components/Addtask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","press","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","time","Tasks","tasks","map","toast","configure","notify","message","type","info","position","POSITION","TOP_CENTER","autoClose","toastId","transition","Zoom","success","warn","error","Addtask","useState","taskObj","setTaskObj","handleChange","ev","value","target","newid","Math","floor","random","name","onSubmit","preventDefault","placeholder","onChange","checked","changeRminder","length","App","showAddTask","setshowAddTask","setTask","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64cfc280.chunk.js","sourcesContent":["//import { ReactPropTypes } from \"react\"\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, press }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={press}\r\n        style={{ backgroundColor: color }}\r\n        className=\"btn\"\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"teal\",\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add Task'} press={onAdd} />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Default title!\"\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder? \"reminder\" : \"\"}` } onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes className=\"fatimes\" \r\n                    onClick={() => onDelete(task.id, task.text)} /></h3>\r\n            <p>{task.day}<span> at {task.time}</span></p>\r\n            \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n   return (\r\n      <>\r\n         {tasks.map((task) => (\r\n         <Task key={task.id} \r\n         task={task} \r\n         onDelete={onDelete} \r\n         onToggle={onToggle} />))}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Tasks\r\n","import { Zoom, toast } from \"react-toastify\";\r\n// export const notify = createContext();\r\n\r\ntoast.configure();\r\nconst notify = (message, type) => {\r\n\r\n    const notifyObject = {\r\n        info: ()=>toast.info(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"01\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        success: ()=>toast.success(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"02\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        warn: ()=>toast.warn(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"03\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        error: ()=>toast.error(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"04\",\r\n            transition: Zoom,\r\n        })\r\n\r\n\r\n    }[type]()\r\n\r\n\r\n};\r\n\r\n\r\nexport default notify;","import { useState } from \"react\";\r\nimport notify from \"../Notify/Notify\";\r\n\r\nconst Addtask = ({ onAdd, tasks }) => {\r\n\r\n  const [taskObj, setTaskObj] = useState({\r\n    text: \"\",\r\n    day: \"\",\r\n    time: \"\",\r\n    reminder: false\r\n  });\r\n\r\n  const handleChange = (ev) => {\r\n    let value = ev.target.value;\r\n    const newid = Math.floor(Math.random() * 200000) + 1;\r\n    // const newTask = {id:id, ...taskObj}\r\n    setTaskObj({ ...taskObj, id: newid, [ev.target.name]: value });\r\n  };\r\n\r\n  const changeRminder = (ev) => {\r\n    ev.target.checked ? (\r\n      setTaskObj({ ...taskObj, reminder: true })\r\n     ) : (\r\n      setTaskObj({ ...taskObj, reminder: false })\r\n     )\r\n  };\r\n\r\n  const onSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    if (!taskObj.text || !taskObj.day || !taskObj.time) {\r\n      notify(\"kindly fill the input fileds\", \"warn\");\r\n      return;\r\n    } \r\n\r\n\r\n\r\n    onAdd(taskObj);\r\n\r\n    setTaskObj({\r\n      text: \"\",\r\n      day: \"\",\r\n      time: \"\",\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label className=\"label\">Add Task</label>\r\n\r\n        <input\r\n          name=\"text\"\r\n          type=\"text\"\r\n          placeholder=\"add a task\"\r\n          value={taskObj.text}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label className=\"label\">Day</label>\r\n\r\n        <input\r\n          name=\"day\"\r\n          type=\"date\"\r\n          value={taskObj.day}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label className=\"label\">Time</label>\r\n        <input\r\n          name=\"time\"\r\n          type=\"time\"\r\n          value={taskObj.time}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label className=\"reminder-label\">Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={taskObj.reminder}\r\n          onChange={(ev) => changeRminder(ev)}\r\n        />\r\n      </div>\r\n\r\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save task\" />\r\n      {tasks.length > 0 && (\r\n        <h4 className=\"rem\">Double tap task to set reminder</h4>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Addtask;\r\n","import { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport Addtask from \"./components/Addtask\";\r\nimport notify from \"./Notify/Notify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  const [showAddTask, setshowAddTask] = useState(true);\r\n  const [tasks, setTask] = useState([\r\n    {\r\n      id: 1,\r\n      text: \"Buy Xmas Chickens\",\r\n      day: \"Dec 24th\",\r\n      time: \"2:00pm\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Meeting at School\",\r\n      day: \"Jan 3rd\",\r\n      time: \"11:30am\",\r\n      reminder: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Food Shopping\",\r\n      day: \"Feb 5th\",\r\n      time: \"2:30pm\",\r\n      reminder: false,\r\n    },\r\n  ]);\r\n\r\n  const addtask = (newTask) => {\r\n    setTask([...tasks, newTask]);\r\n    notify(`Task \" ${newTask.text}\" Added`, \"success\");\r\n  };\r\n\r\n  const deleteTask = (ev, text) => {\r\n    setTask(tasks.filter((task) => task.id !== ev));\r\n    notify(`Task \" ${text}\" deleted`, \"warn\");\r\n  };\r\n\r\n  const toggleReminder = (ev) => {\r\n    setTask(\r\n      tasks.map((task) =>\r\n        task.id === ev ? { ...task, reminder: !task.reminder } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <Header\r\n        title=\"Task Tracker\"\r\n        onAdd={() => setshowAddTask(!showAddTask)}\r\n        showAdd={showAddTask}\r\n      />\r\n\r\n      {showAddTask && <Addtask onAdd={addtask} tasks={tasks} />}\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\r\n      ) : (\r\n        <h3>No task</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}