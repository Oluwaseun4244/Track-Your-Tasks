{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","Notify/Notify.jsx","components/Addtask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","press","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","time","Tasks","tasks","map","toast","configure","notify","message","type","info","position","POSITION","TOP_CENTER","autoClose","toastId","transition","Zoom","success","warn","error","Addtask","useState","setText","setTime","setDay","setReminder","onSubmit","ev","preventDefault","placeholder","value","onChange","target","checked","currentTarget","length","App","showAddTask","setshowAddTask","setTask","taskObj","Math","floor","random","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cafb34ce.chunk.js","sourcesContent":["//import { ReactPropTypes } from \"react\"\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, press }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={press}\r\n        style={{ backgroundColor: color }}\r\n        className=\"btn\"\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"teal\",\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add Task'} press={onAdd} />\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Default title!\"\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder? \"reminder\" : \"\"}` } onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes style={{ color: 'red', cursor: 'pointer' }}\r\n                    onClick={() => onDelete(task.id, task.text)} /></h3>\r\n            <p>{task.day}<span> at {task.time}</span></p>\r\n            \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n   return (\r\n      <>\r\n         {tasks.map((task) => (\r\n         <Task key={task.id} \r\n         task={task} \r\n         onDelete={onDelete} \r\n         onToggle={onToggle} />))}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Tasks\r\n","import { createContext } from \"react\";\r\nimport { Zoom, toast } from \"react-toastify\";\r\nexport const userContext = createContext();\r\n// export const notify = createContext();\r\n\r\ntoast.configure();\r\nconst notify = (message, type) => {\r\n\r\n    const notifyObject = {\r\n        info: ()=>toast.info(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"01\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        success: ()=>toast.success(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"02\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        warn: ()=>toast.warn(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"03\",\r\n            transition: Zoom,\r\n        }),\r\n    \r\n        error: ()=>toast.error(message, {\r\n            position: toast.POSITION.TOP_CENTER,\r\n            autoClose: 1500,\r\n            toastId: \"04\",\r\n            transition: Zoom,\r\n        })\r\n\r\n\r\n    }[type]()\r\n\r\n\r\n};\r\n\r\n\r\nexport default notify;","import { useState } from \"react\"\r\nimport notify from \"../Notify/Notify\";\r\n\r\nconst Addtask = ({ onAdd, tasks }) => {\r\n   const [text, setText] = useState('')\r\n   const [time, setTime] = useState('')\r\n   const [day, setDay] = useState('')\r\n   const [reminder, setReminder] = useState(false)\r\n\r\n   const onSubmit = (ev) => {\r\n      ev.preventDefault()\r\n      if (!text) {\r\n         notify(\"kindly add a Task\", \"warn\")\r\n         return\r\n      }\r\n      \r\n      onAdd({ text, day, reminder, time })\r\n\r\n      setText('')\r\n      setDay('')\r\n      setReminder(false)\r\n   }\r\n   return (\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n         \r\n         <div className=\"form-control\">\r\n            <label className=\"label\">Add Task</label>\r\n            <input type=\"text\" placeholder=\"add a task\" value={text} onChange={(ev) => setText(ev.target.value)} />\r\n         </div>\r\n         <div className=\"form-control\">\r\n            <label className=\"label\">Day</label>\r\n            <input type=\"date\"  value={day} onChange={(ev) => setDay(ev.target.value)} />\r\n         </div>\r\n         <div className=\"form-control\">\r\n            <label className=\"label\">Time</label>\r\n            <input type=\"time\"  value={time} onChange={(ev) => setTime(ev.target.value)} />\r\n         </div>\r\n         <div className=\"form-control\">   \r\n            <label className=\"label\">Set Reminder</label>\r\n            <input type=\"checkbox\" checked={reminder} onChange={(ev) => setReminder(ev.currentTarget.checked)} />\r\n         </div>\r\n\r\n         <input className=\"btn btn-block\" type=\"submit\" value=\"Save task\" />\r\n         {tasks.length > 0 && <h4 className=\"rem\">Double tap task to set reminder</h4>}\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default Addtask\r\n","import { useState } from \"react\"\r\nimport Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport Addtask from \"./components/Addtask\";\r\nimport notify from \"./Notify/Notify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n  const  [showAddTask, setshowAddTask] = useState(true)\r\n  const [tasks, setTask] = useState(\r\n    [\r\n      {\r\n        id: 1,\r\n        text: \"Buy Xmas Chickens\",\r\n        day: \"Dec 24th\",\r\n        time: \"2:00pm\",\r\n        reminder: true\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Meeting at School\",\r\n        day: \"Jan 3rd\",\r\n        time: \"11:30am\",\r\n        reminder: true\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Food Shopping\",\r\n        day: \"Feb 5th\",\r\n        time: \"2:30pm\",\r\n        reminder: false\r\n      },\r\n    ]\r\n  )\r\n\r\n  const addtask = (taskObj) => {\r\n    const id = Math.floor(Math.random() * 200000) + 1\r\n    const newTask = {id:id, ...taskObj}\r\n    setTask([...tasks, newTask])\r\n    notify(`Task \" ${newTask.text}\" Added`, \"success\")\r\n\r\n  }\r\n\r\n  const deleteTask = (ev, text) => {\r\n    setTask(tasks.filter(task => task.id !== ev))\r\n    notify(`Task \" ${text}\" deleted`, \"warn\")\r\n\r\n  }\r\n\r\n  const toggleReminder = (ev) => {\r\n    setTask(tasks.map(task => task.id === ev ? {...task, reminder: !task.reminder} : task))\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <Header title=\"Task Tracker\" onAdd={()=> setshowAddTask(!showAddTask)} showAdd={showAddTask}/>\r\n      \r\n      {showAddTask && <Addtask onAdd={addtask} tasks={tasks }/>}\r\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : (\"No task\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}